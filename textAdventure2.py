#Author: Meghan Clark
#A (very short) text adventure written with no loops or if statements.
#Control flow is done entirely with try-except blocks and recursion.

import os as ____________

_ = {"north":0, "south":1, "east":2, "west":3}
__ = {"n":0, False: 0, "y":1, True: 1}
___ = ["posix", ("nt", "dos", "ce")]
____ = None
_________________ = ''.join(chr(i) for i in [83, 111, 114, 114, 121, 44, 32, 121, 111, 117, 32, 99, 97, 110, 39, 116, 32, 103, 111, 32, 116, 104, 97, 116, 32, 119, 97, 121, 46, 32, 84, 114, 121, 32, 97, 103, 97, 105, 110, 58, 32])
______________________ = ''.join(chr(i) for i in [80, 108, 101, 97, 115, 101, 32, 116, 121, 112, 101, 32, 39, 121, 39, 32, 111, 114, 32, 39, 110, 39, 58, 32])

def main():
	______________()

def ______________():
	_____ = ''.join(chr(i) for i in [89, 111, 117, 32, 102, 105, 110, 100, 32, 121, 111, 117, 114, 115, 101, 108, 102, 32, 115, 116, 97, 110, 100, 105, 110, 103, 32, 105, 110, 32, 97, 32, 102, 105, 101, 108, 100, 46, 32, 87, 104, 105, 99, 104, 32, 119, 97, 121, 32, 100, 111, 32, 121, 111, 117, 32, 119, 97, 110, 116, 32, 116, 111, 32, 103, 111, 63, 10])
	______ = ''.join(chr(i) for i in [10, 68, 101, 97, 116, 104, 32, 98, 121, 32, 116, 111, 114, 110, 97, 100, 111, 33, 32, 89, 111, 117, 39, 118, 101, 32, 98, 101, 101, 110, 32, 98, 108, 111, 119, 110, 32, 97, 119, 97, 121, 46])
	_______ = ''.join(chr(i) for i in [10, 68, 101, 97, 116, 104, 32, 98, 121, 32, 101, 97, 114, 116, 104, 113, 117, 97, 107, 101, 33, 32, 89, 111, 117, 39, 114, 101, 32, 110, 111, 32, 108, 111, 110, 103, 101, 114, 32, 103, 114, 111, 117, 110, 100, 101, 100, 32, 105, 110, 32, 116, 104, 105, 115, 32, 114, 101, 97, 108, 105, 116, 121, 46])
	________ = ''.join(chr(i) for i in [10, 68, 101, 97, 116, 104, 32, 98, 121, 32, 118, 111, 108, 99, 97, 110, 111, 33, 32, 84, 104, 101, 32, 102, 105, 114, 101, 32, 104, 97, 115, 32, 103, 111, 110, 101, 32, 102, 114, 111, 109, 32, 121, 111, 117, 114, 32, 115, 112, 105, 114, 105, 116, 46])
	_________ = ''.join(chr(i) for i in [10, 68, 101, 97, 116, 104, 32, 98, 121, 32, 116, 115, 117, 110, 97, 109, 105, 33, 32, 65, 32, 112, 101, 97, 99, 101, 102, 117, 108, 32, 99, 97, 108, 109, 32, 119, 97, 115, 104, 101, 115, 32, 111, 118, 101, 114, 32, 121, 111, 117, 46, 32, 83, 111, 32, 100, 111, 32, 116, 104, 101, 32, 119, 97, 118, 101, 115, 46])
	__________ = ""
	___________ = ""
	__________________ = ''.join(chr(i) for i in [73, 32, 103, 111, 32, 40, 78, 111, 114, 116, 104, 47, 83, 111, 117, 116, 104, 47, 69, 97, 115, 116, 47, 87, 101, 115, 116, 41, 58, 32])
	___________________ = ''.join(chr(i) for i in [99, 108, 101, 97, 114])
	____________________ = ''.join(chr(i) for i in [67, 76, 83])
	_____________________ = ''.join(chr(i) for i in [10, 80, 108, 97, 121, 32, 97, 103, 97, 105, 110, 63, 32, 40, 121, 47, 110, 41, 58, 32])

	#clear screen
	try:
		1/___.index(____________.name)
	except ZeroDivisionError:
		____________.system(___________________)
	except ValueError:
		try:
			1/(__[____________.name in ___[1]])
			print '\n' * 100
		except ZeroDivisionError:
			____________.system(____________________)

	#begin game
	print _____
	_____________ = raw_input(__________________)

	try:
		_[_____________.lower()]
		__________ = _____________.lower()
	except KeyError:
		__________ = _______________()

	try:
		1/_[__________]
	except ZeroDivisionError:
		print ______

	try:
		1/(_[__________]-1)
	except ZeroDivisionError:
		print _______

	try:
		1/(_[__________]-2)
	except ZeroDivisionError:
		print ________

	try:
		1/(_[__________]-3)
	except ZeroDivisionError:
		print _________

	_____________ = raw_input(_____________________)
	
	try:
		__[_____________.lower()]
		___________ = _____________.lower()
	except KeyError:
		___________ = ________________()

	try:
		1/(__[___________]-1)
	except:
		______________()

#recurses until it gets valid _____________
def _______________():
	_____________ = raw_input(_________________)
	try:
		_[_____________.lower()]
		return _____________.lower()
	except KeyError:
		return _______________()	

#recurses until it gets valid _____________
def ________________():
	_____________ = raw_input(______________________)
	try:
		__[_____________.lower()]
		return _____________.lower()
	except KeyError:
		return ________________()	

main()
	
